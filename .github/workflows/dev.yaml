name: "Integration Tests"
on:
  pull_request_target:
    types:
      - labeled
jobs:
  "build_image":
    runs-on: ubuntu-latest
    if: ${{ github.event.label.name == 'ok to test' }}
    steps:
      - name: Remove label
        uses: andymckay/labeler@master
        with:
          remove-labels: "ok to test"
        if: always()
      - uses: actions/checkout@v3
        with:
          ref: "${{ github.event.pull_request.head.sha }}"
      - uses: actions/setup-go@v3
        with:
          go-version: '1.19'
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ github.token }}
      - name: Build and push dev image
        env:
          TELEPRESENCE_REGISTRY: ghcr.io/${{ github.repository_owner }}
        run: |
          make push-image
  run_tests:
    strategy:
      fail-fast: false
      matrix:
        runners:
          - ubuntu-latest
          - macos-latest
          - windows-2019
          - macOS-arm64
        clusters:
          - distribution: Kubeception
            version: "1.19"
    runs-on: ${{ matrix.runners }}
    needs: "build_image"
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: "${{ github.event.pull_request.head.sha }}"
      - uses: ./.github/actions/install-dependencies
        name: install dependencies
      - run: make build
      - uses: ./.github/actions/prepare-cluster
        with:
          kubeception-token: ${{ secrets.DEV_TELEPRESENCE_KUBECEPTION_TOKEN }}
          gke-credentials: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}
          cluster-distribution: ${{ matrix.clusters.distribution }}
          cluster-version: ${{ matrix.clusters.version }}
        id: kluster
      - uses: ./.github/actions/integration-tests
        with:
          kubeconfig: "${{ steps.kluster.outputs.kubeconfig }}"
      - uses: ./.github/actions/upload-logs
        env:
          LOG_SUFFIX: "-${{ runner.os }}-${{ matrix.clusters.distribution }}-${{ matrix.clusters.version }}"
        if: always()
